{"version":3,"sources":["pages/Login/Login.js"],"names":["useStyles","makeStyles","theme","root","height","width","backgroundImage","display","justifyContent","alignItems","loginContainer","maxWidth","backgroundColor","boxShadow","borderRadius","flexDirection","padding","login","large","spacing","marginTop","transform","signinBtn","textTransform","fgtBtn","color","palette","primary","main","fontWeight","text","margin","form","h4","h6","Login","history","classes","useGlobal","actions","useState","username","password","formData","setFormData","loading","setLoading","type","setType","changeHandler","e","field","target","value","signInHandler","a","trim","NotificationManager","warning","checkAuth","auth","setAuth","className","alt","src","logo","variant","component","label","required","fullWidth","onChange","control","checked","prev","name","onClick"],"mappings":"mSAeMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,QACRC,MAAO,OAEPC,gBACE,+EAIFC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,eAAgB,CACdL,MAAO,QACPM,SAAU,MACVP,OAAQ,QACRQ,gBAAiB,OACjBC,UAAW,gCACXC,aAAc,MACdP,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZM,cAAe,SAEfC,QAAS,UAEXC,MAAO,GACPC,MAAO,CACLb,MAAOH,EAAMiB,QAAQ,IACrBf,OAAQF,EAAMiB,QAAQ,IACtBC,UAAW,SACXC,UAAW,aAEbC,UAAW,CACTjB,MAAO,OACPe,UAAW,SACXG,cAAe,WAEjBC,OAAQ,CACNnB,MAAO,OACPe,UAAW,SACXG,cAAe,UACfE,MAAOvB,EAAMwB,QAAQC,QAAQC,KAC7BC,WAAY,QAEdC,KAAM,CACJC,OAAQ,YAEVC,KAAM,CACJZ,UAAW,UAEba,GAAI,CACFb,UAAW,OACXS,WAAY,QAEdK,GAAI,CACFd,UAAW,cA2FAe,UAvFf,YAA4B,EAAXC,QAAY,IACrBC,EAAUrC,IADU,EAEDsC,cAFC,mBAEZC,GAFY,aAGMC,mBAAS,CAAEC,SAAU,GAAIC,SAAU,KAHzC,mBAGnBC,EAHmB,KAGTC,EAHS,OAIIJ,oBAAS,GAJb,mBAInBK,EAJmB,KAIVC,EAJU,OAKFN,oBAAS,GALP,mBAKnBO,EALmB,KAKbC,EALa,KAMpBC,EAAgB,SAACC,EAAGC,GACxBP,EAAY,2BAAKD,GAAN,kBAAiBQ,EAAQD,EAAEE,OAAOC,UAEzCC,EAAa,uCAAG,4BAAAC,EAAA,yDACpBT,GAAW,GACNH,EAASF,SAASe,QAAWb,EAASD,SAASc,OAFhC,uBAGlBV,GAAW,GAHO,kBAIXW,sBAAoBC,QAAQ,0BAA2B,YAJ5C,uBAOHC,YAAUhB,GAPP,OAOhBiB,EAPgB,OAQpBrB,EAAQsB,QAAQD,GAChBd,GAAW,GATS,2CAAH,qDAenB,OACE,qBAAKgB,UAAWzB,EAAQlC,KAAxB,SACE,sBAAK2D,UAAWzB,EAAQ3B,eAAxB,UACE,cAAC,IAAD,CAAQoD,UAAWzB,EAAQnB,MAAO6C,IAAI,OAAOC,IAAKC,MAElD,cAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKL,UAAWzB,EAAQJ,GAA3D,4BAGA,cAAC,IAAD,CACEiC,QAAQ,QACRC,UAAU,KACV1C,MAAM,gBACNqC,UAAWzB,EAAQH,GAJrB,iDAQA,uBAAM4B,UAAWzB,EAAQL,KAAzB,UACE,cAAC,IAAD,CACEoC,MAAM,WACNC,UAAQ,EACRC,WAAS,EACTR,UAAWzB,EAAQP,KACnBuB,MAAOV,EAASF,SAChB8B,SAAU,SAACrB,GAAD,OAAOD,EAAcC,EAAG,eAEpC,cAAC,IAAD,CACEkB,MAAM,WACNrB,KAAMA,EAAO,OAAS,WACtBsB,UAAQ,EACRC,WAAS,EACTR,UAAWzB,EAAQP,KACnBuB,MAAOV,EAASD,SAChB6B,SAAU,SAACrB,GAAD,OAAOD,EAAcC,EAAG,eAEpC,cAAC,IAAD,CACEsB,QACE,cAAC,IAAD,CACEC,QAAS1B,EACTwB,SAzCO,SAACrB,GACpBF,GAAQ,SAAC0B,GAAD,OAAWA,MAyCPC,KAAK,WACLlD,MAAM,YAGV2C,MAAM,kBAER,cAAC,IAAD,CACEF,QAAQ,YACRzC,MAAM,UACNqC,UAAWzB,EAAQf,UACnBsD,QAAStB,EACTP,KAAK,SALP,SAOGF,EAAU,gBAAkB,YAE/B,cAAC,IAAD,CAAQqB,QAAQ,UAAUJ,UAAWzB,EAAQb,OAA7C","file":"static/js/10.ab856c05.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { checkAuth } from \"./../../utils/auth\";\r\nimport { useGlobal } from \"./../../global/global\";\r\nimport logo from \"../../assets/icon.png\";\r\nimport {\r\n  Avatar,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"rgb(247, 249, 252)\",\r\n    backgroundImage:\r\n      'linear-gradient(to right,rgba(25 ,10 ,1, 0.84),#330202eb),url(\"ganesha.jpg\")',\r\n    // backgroundRepeat: \"no-repeat\", linear-gradient(to right,rgb(25 10 1 / 84%),#330202eb),url(ganesha.jpg)\r\n    // backgroundSize: \"cover\",\r\n\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loginContainer: {\r\n    width: \"520px\",\r\n    maxWidth: \"90%\",\r\n    height: \"520px\",\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: \"0 0 14px 0 rgba(53,64,82,.05)\",\r\n    borderRadius: \"2px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    // transform: \"translateX(50%)\",\r\n    padding: \"2.3rem\",\r\n  },\r\n  login: {},\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    marginTop: \"0.4rem\",\r\n    transform: \"translate\",\r\n  },\r\n  signinBtn: {\r\n    width: \"100%\",\r\n    marginTop: \"1.2rem\",\r\n    textTransform: \"initial\",\r\n  },\r\n  fgtBtn: {\r\n    width: \"100%\",\r\n    marginTop: \"0.5rem\",\r\n    textTransform: \"initial\",\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  text: {\r\n    margin: \"0.7rem 0\",\r\n  },\r\n  form: {\r\n    marginTop: \"1.5rem\",\r\n  },\r\n  h4: {\r\n    marginTop: \"1rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  h6: {\r\n    marginTop: \"0.5rem\",\r\n  },\r\n}));\r\n\r\nfunction Login({ history }) {\r\n  const classes = useStyles();\r\n  const [state, actions] = useGlobal();\r\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const [type, setType] = useState(false);\r\n  const changeHandler = (e, field) => {\r\n    setFormData({ ...formData, [field]: e.target.value });\r\n  };\r\n  const signInHandler = async () => {\r\n    setLoading(true);\r\n    if (!formData.username.trim() || !formData.password.trim()) {\r\n      setLoading(false);\r\n      return NotificationManager.warning(\"Some fields are missing\", \"Invalid\");\r\n    }\r\n\r\n    let auth = await checkAuth(formData);\r\n    actions.setAuth(auth);\r\n    setLoading(false);\r\n  };\r\n\r\n  const checkHandler = (e) => {\r\n    setType((prev) => !prev);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.loginContainer}>\r\n        <Avatar className={classes.large} alt=\"logo\" src={logo} />\r\n\r\n        <Typography variant=\"h5\" component=\"h4\" className={classes.h4}>\r\n          Welcome back !\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body1\"\r\n          component=\"h6\"\r\n          color=\"textSecondary\"\r\n          className={classes.h6}\r\n        >\r\n          Sign in to your account to continue\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            label=\"Username\"\r\n            required\r\n            fullWidth\r\n            className={classes.text}\r\n            value={formData.username}\r\n            onChange={(e) => changeHandler(e, \"username\")}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type={type ? \"text\" : \"password\"}\r\n            required\r\n            fullWidth\r\n            className={classes.text}\r\n            value={formData.password}\r\n            onChange={(e) => changeHandler(e, \"password\")}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={type}\r\n                onChange={checkHandler}\r\n                name=\"checkedC\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Show password\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.signinBtn}\r\n            onClick={signInHandler}\r\n            type=\"button\"\r\n          >\r\n            {loading ? \"Signing in...\" : \"Sign in\"}\r\n          </Button>\r\n          <Button variant=\"default\" className={classes.fgtBtn}>\r\n            For any assistance reach out to TGM\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}