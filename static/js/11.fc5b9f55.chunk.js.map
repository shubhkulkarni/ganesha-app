{"version":3,"sources":["components/Export/CSVExporter.js","pages/Profile/Profile.js"],"names":["headers","label","key","date","Date","CSVExporter","children","useGlobal","state","data","paymentsData","filename","columns","field","headerName","width","type","sortable","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","background","paper","color","minWidth","breakpoints","up","padding","down","paper1","marginBottom","formControl","paddingRight","arrow","exportBtn","fontWeight","helper","borderRadius","receiptBtn","borderColor","borderWidth","Profile","classes","actions","useState","loading","setLoading","recordYear","setRecordYear","fetchData","year","a","fetchPayments","setPaymentsData","setPaymentsTotal","getTotal","setDataYear","NotificationManager","error","message","useEffect","length","console","log","JSON","stringify","map","i","receiptNo","num","onRowClick","row","generatePdf","Box","className","Grid","container","spacing","alignItems","justify","xs","lg","md","Typography","variant","component","paymentsTotal","toFixed","replace","Button","startIcon","onClick","FormControl","fullWidth","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","Paper","Hidden","smUp","display","align","smDown","autoHeight","rows","pageSize","getRowId","onRowDoubleClick"],"mappings":"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","file":"static/js/11.fc5b9f55.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { useGlobal } from \"./../../global/global\";\r\n\r\nconst headers = [\r\n  { label: \"Receipt no.\", key: \"receiptNo\" },\r\n  { label: \"Fullname\", key: \"name\" },\r\n  { label: \"Amount\", key: \"amount\" },\r\n  { label: \"Mobile\", key: \"mobile\" },\r\n  { label: \"Date\", key: \"date\" },\r\n  { label: \"Payment mode\", key: \"payment\" },\r\n];\r\n\r\nconst date = new Date();\r\nfunction CSVExporter({ children }) {\r\n  const [state, actions] = useGlobal();\r\n  return (\r\n    <CSVLink\r\n      data={state.paymentsData}\r\n      headers={headers}\r\n      filename={`donation_${date}.csv`}\r\n    >\r\n      {children}\r\n    </CSVLink>\r\n  );\r\n}\r\n\r\nexport default CSVExporter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Hidden,\r\n  Paper,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport GetAppOutlinedIcon from \"@material-ui/icons/GetAppOutlined\";\r\nimport CachedOutlinedIcon from \"@material-ui/icons/CachedOutlined\";\r\nimport { fetchPayments } from \"../../services/fetchPayments\";\r\nimport { useGlobal } from \"./../../global/global\";\r\nimport { getTotal } from \"./../../utils/getTotal\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport CSVExporter from \"../../components/Export/CSVExporter\";\r\nimport { generatePdf } from \"./../../utils/pdfGenerator\";\r\nconst columns = [\r\n  { field: \"receiptNo\", headerName: \"Receipt No.\", width: 150 },\r\n  { field: \"name\", headerName: \"Fullname\", width: 250 },\r\n  { field: \"amount\", headerName: \"Amount\", width: 150, type: \"number\" },\r\n  {\r\n    field: \"date\",\r\n    headerName: \"Date\",\r\n    type: \"date\",\r\n    width: 150,\r\n  },\r\n  {\r\n    field: \"mobile\",\r\n    headerName: \"Mobile\",\r\n\r\n    sortable: false,\r\n    width: 150,\r\n  },\r\n  {\r\n    field: \"payment\",\r\n    headerName: \"Payment mode\",\r\n\r\n    width: 150,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    \"MuiDataGrid-colCellWrapper\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  paper: {\r\n    minWidth: \"auto\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: 15,\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: 7,\r\n    },\r\n    // height: \"80vh\",\r\n  },\r\n  paper1: {\r\n    minWidth: \"auto\",\r\n\r\n    // height: 45,\r\n    marginBottom: 24,\r\n    padding: 15,\r\n    [theme.breakpoints.up(\"md\")]: {},\r\n\r\n    overflowX: \"hidden\",\r\n  },\r\n  formControl: {\r\n    paddingRight: 24,\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginBottom: 20,\r\n    },\r\n  },\r\n  arrow: {\r\n    color: \"#08be08\",\r\n  },\r\n  exportBtn: {\r\n    color: \"#dc5319\",\r\n    fontWeight: \"bold\",\r\n    background: \"#ffb60054\",\r\n    \"&:hover\": {\r\n      background: \"#ffb6008a\",\r\n    },\r\n  },\r\n  helper: {\r\n    background: \"#4aa6ff29\",\r\n    padding: \"5px 10px\",\r\n    width: \"100%\",\r\n    color: \"#055aae\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"50px\",\r\n  },\r\n  receiptBtn: {\r\n    borderColor: \"#ffb60054\",\r\n    borderWidth: 2,\r\n    \"&:hover\": {\r\n      borderColor: \"#ffb60054\",\r\n      borderWidth: 2,\r\n    },\r\n    // color: \"#dc5319\",\r\n  },\r\n}));\r\n\r\nfunction Profile() {\r\n  const classes = useStyles();\r\n  const [state, actions] = useGlobal();\r\n  const [loading, setLoading] = useState(false);\r\n  const [recordYear, setRecordYear] = useState(\"receipt2021\");\r\n  const fetchData = async (year) => {\r\n    setLoading(true);\r\n    try {\r\n      let data = await fetchPayments(year);\r\n      setLoading(false);\r\n      actions.setPaymentsData(data);\r\n      actions.setPaymentsTotal(getTotal(data));\r\n      actions.setDataYear(year);\r\n    } catch (err) {\r\n      NotificationManager.error(err.message, \"Error\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!state.paymentsData.length) {\r\n      fetchData(recordYear);\r\n    } else\r\n      console.log(JSON.stringify(state.paymentsData.map((i) => i.receiptNo)));\r\n  }, []);\r\n  const handleChange = (event) => {\r\n    setRecordYear(event.target.value);\r\n    fetchData(event.target.value);\r\n  };\r\n\r\n  const refreshHandler = () => {\r\n    fetchData(recordYear);\r\n  };\r\n\r\n  const onRowClick = async ({ row }) => {\r\n    await generatePdf(row);\r\n  };\r\n  const getIndianNumber = (num) => {\r\n    return num.toFixed(1).replace(/(\\d)(?=(\\d{2})+\\d\\.)/g, \"$1,\"); // \"12,34,567.80\"\r\n  };\r\n  return (\r\n    <div>\r\n      <Box className={classes.paper1}>\r\n        <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n          <Grid xs={12} lg={6} md={6}>\r\n            <Typography variant=\"h2\" component=\"h3\">\r\n              {getIndianNumber(state.paymentsTotal)}{\" \"}\r\n              <Typography variant=\"h5\" component=\"span\">\r\n                {\" \"}\r\n                ₹{\" \"}\r\n              </Typography>\r\n              <ArrowUpwardIcon className={classes.arrow} />{\" \"}\r\n              <Button\r\n                startIcon={<CachedOutlinedIcon />}\r\n                className={classes.receiptBtn}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={refreshHandler}\r\n              >\r\n                {loading ? \"Refreshing...\" : \"Refresh\"}\r\n              </Button>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid xs={12} lg={3} md={6}>\r\n            {\" \"}\r\n            <FormControl\r\n              // variant=\"filled\"\r\n              fullWidth\r\n              className={classes.formControl}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Select year\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={recordYear}\r\n                onChange={handleChange}\r\n                label=\"Select year\"\r\n              >\r\n                <MenuItem value={\"receipt2021\"}>2021</MenuItem>\r\n                <MenuItem value={\"receipt2020\"}>2020</MenuItem>\r\n                <MenuItem value={\"receipt\"}>2019</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid xs={12} lg={3}>\r\n            <CSVExporter>\r\n              <Button\r\n                startIcon={<GetAppOutlinedIcon />}\r\n                variant=\"contained\"\r\n                // color=\"primary\"\r\n                fullWidth\r\n                className={classes.exportBtn}\r\n              >\r\n                Export to CSV\r\n              </Button>\r\n            </CSVExporter>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Paper className={classes.paper}>\r\n        {/* <Container maxWidth=\"lg\"> */}\r\n        <Hidden smUp>\r\n          <Typography\r\n            variant=\"body\"\r\n            display=\"block\"\r\n            align=\"center\"\r\n            className={classes.helper}\r\n          >\r\n            Double click to get receipt\r\n          </Typography>\r\n        </Hidden>\r\n        <Hidden smDown>\r\n          <Typography\r\n            variant=\"body\"\r\n            display=\"block\"\r\n            align=\"center\"\r\n            className={classes.helper}\r\n          >\r\n            Double click on any record to download the PDF receipt{\" \"}\r\n          </Typography>\r\n        </Hidden>\r\n        <DataGrid\r\n          loading={loading}\r\n          autoHeight\r\n          rows={state.paymentsData}\r\n          columns={columns}\r\n          pageSize={15}\r\n          getRowId={(row) => row.receiptNo}\r\n          onRowDoubleClick={onRowClick}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}