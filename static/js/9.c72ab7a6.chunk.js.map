{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","services/authService.js","pages/Login/Login.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","forEach","key","concat","capitalize","Typography","theme","display","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","fontSize","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","signInService","data","a","axios","post","response","useStyles","makeStyles","backgroundImage","justifyContent","loginContainer","maxWidth","boxShadow","borderRadius","login","large","spacing","marginTop","transform","signinBtn","textTransform","fgtBtn","fontWeight","form","h4","h6","Login","history","useGlobal","actions","useState","username","password","formData","setFormData","loading","setLoading","setType","changeHandler","e","field","signInHandler","trim","NotificationManager","warning","localStorage","setItem","accessToken","setAuth","error","message","Avatar","alt","src","logo","variant","TextField","fullWidth","prev","Button","onClick","childrenProp","children","_props$component","Component","imgProps","sizes","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","flexShrink","fontFamily","typography","pxToRem","lineHeight","overflow","userSelect","background","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent"],"mappings":"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","file":"static/js/9.c72ab7a6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import axios from \"axios\";\r\n\r\nexport async function signInService(data) {\r\n  let response = await axios.post(\r\n    `https://qfok3.sse.codesandbox.io/signin`,\r\n    data\r\n  );\r\n  return response.data;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { checkAuth } from \"./../../utils/auth\";\r\nimport { useGlobal } from \"./../../global/global\";\r\nimport logo from \"../../assets/icon.png\";\r\nimport {\r\n  Avatar,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { signInService } from \"../../services/authService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"rgb(247, 249, 252)\",\r\n    backgroundImage:\r\n      'linear-gradient(to right,rgba(25 ,10 ,1, 0.84),#330202eb),url(\"ganesha.jpg\")',\r\n    // backgroundRepeat: \"no-repeat\", linear-gradient(to right,rgb(25 10 1 / 84%),#330202eb),url(ganesha.jpg)\r\n    // backgroundSize: \"cover\",\r\n\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loginContainer: {\r\n    width: \"520px\",\r\n    maxWidth: \"90%\",\r\n    height: \"520px\",\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: \"0 0 14px 0 rgba(53,64,82,.05)\",\r\n    borderRadius: \"2px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    // transform: \"translateX(50%)\",\r\n    padding: \"2.3rem\",\r\n  },\r\n  login: {},\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    marginTop: \"0.4rem\",\r\n    transform: \"translate\",\r\n  },\r\n  signinBtn: {\r\n    width: \"100%\",\r\n    marginTop: \"1.2rem\",\r\n    textTransform: \"initial\",\r\n  },\r\n  fgtBtn: {\r\n    width: \"100%\",\r\n    marginTop: \"0.5rem\",\r\n    textTransform: \"initial\",\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  text: {\r\n    margin: \"0.7rem 0\",\r\n  },\r\n  form: {\r\n    marginTop: \"1.5rem\",\r\n  },\r\n  h4: {\r\n    marginTop: \"1rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  h6: {\r\n    marginTop: \"0.5rem\",\r\n  },\r\n}));\r\n\r\nfunction Login({ history }) {\r\n  const classes = useStyles();\r\n  const [state, actions] = useGlobal();\r\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const [type, setType] = useState(false);\r\n  const changeHandler = (e, field) => {\r\n    setFormData({ ...formData, [field]: e.target.value });\r\n  };\r\n  const signInHandler = async () => {\r\n    setLoading(true);\r\n    if (!formData.username.trim() || !formData.password.trim()) {\r\n      setLoading(false);\r\n      return NotificationManager.warning(\"Some fields are missing\", \"Invalid\");\r\n    }\r\n    try {\r\n      let { username, password } = formData;\r\n      let response = await signInService({ username, password });\r\n      await localStorage.setItem(\"accessToken\", response.accessToken);\r\n      actions.setAuth(true);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      NotificationManager.error(err.message, \"Error\");\r\n      NotificationManager.error(\"Incorrect username or password\", \"Error\");\r\n      actions.setAuth(false);\r\n      setLoading(false);\r\n    }\r\n    // let auth = await checkAuth(formData);\r\n\r\n    // actions.setAuth(auth);\r\n    // setLoading(false);\r\n  };\r\n\r\n  const checkHandler = (e) => {\r\n    setType((prev) => !prev);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.loginContainer}>\r\n        <Avatar className={classes.large} alt=\"logo\" src={logo} />\r\n\r\n        <Typography variant=\"h5\" component=\"h4\" className={classes.h4}>\r\n          Welcome back !\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body1\"\r\n          component=\"h6\"\r\n          color=\"textSecondary\"\r\n          className={classes.h6}\r\n        >\r\n          Sign in to your account to continue\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            label=\"Username\"\r\n            required\r\n            fullWidth\r\n            className={classes.text}\r\n            value={formData.username}\r\n            onChange={(e) => changeHandler(e, \"username\")}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type={type ? \"text\" : \"password\"}\r\n            required\r\n            fullWidth\r\n            className={classes.text}\r\n            value={formData.password}\r\n            onChange={(e) => changeHandler(e, \"password\")}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={type}\r\n                onChange={checkHandler}\r\n                name=\"checkedC\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Show password\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.signinBtn}\r\n            onClick={signInHandler}\r\n            type=\"button\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Signing in...\" : \"Sign in\"}\r\n          </Button>\r\n          <Button variant=\"default\" className={classes.fgtBtn}>\r\n            For any assistance reach out to TGM\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);"],"sourceRoot":""}